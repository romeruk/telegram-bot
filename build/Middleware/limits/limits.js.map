{"version":3,"sources":["../../../src/Middleware/limits/limits.js"],"names":["limits","Map","defaultReplyFn","ctx","msg","reply","defaultKeyFn","from","id","options","timeout","replyfn","keyfn","limitsMiddleware","opts","next","config","Object","assign","value","getBlocketUser","get","set","setTimeout"],"mappings":";;;;;;;;;;;AAAA,IAAMA,MAAM,GAAG,IAAIC,GAAJ,EAAf;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,GAAD,EAAMC,GAAN;AAAA,SAAcD,GAAG,CAACE,KAAJ,CAAUD,GAAV,CAAd;AAAA,CAAvB;;AACA,IAAME,YAAY,GAAG,SAAfA,YAAe,CAACH,GAAD;AAAA,SAASA,GAAG,CAACI,IAAJ,CAASC,EAAlB;AAAA,CAArB;;AAEA,IAAMC,OAAO,GAAG;AACdC,EAAAA,OAAO,EAAE,IADK;AAEdC,EAAAA,OAAO,EAAET,cAFK;AAGdU,EAAAA,KAAK,EAAEN;AAHO,CAAhB;;AAMA,IAAMO,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAAU,iBAAOX,GAAP,EAAYY,IAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAC3BC,gBAAAA,MAD2B,GAClBC,MAAM,CAACC,MAAP,CAAcT,OAAd,EAAuBK,IAAvB,CADkB;AAGzBJ,gBAAAA,OAHyB,GAGGM,MAHH,CAGzBN,OAHyB,EAGhBC,OAHgB,GAGGK,MAHH,CAGhBL,OAHgB,EAGPC,KAHO,GAGGI,MAHH,CAGPJ,KAHO;AAK3BO,gBAAAA,KAL2B,GAKnBP,KAAK,CAACT,GAAD,CALc;AAM3BiB,gBAAAA,cAN2B,GAMVpB,MAAM,CAACqB,GAAP,CAAWF,KAAX,CANU;;AAAA,qBAQ7BC,cAR6B;AAAA;AAAA;AAAA;;AAAA,iDASxBT,OAAO,CAACR,GAAD,EAAMiB,cAAN,CATiB;;AAAA;AAY/BpB,gBAAAA,MAAM,CAACsB,GAAP,CAAWH,KAAX,wBAAiCT,OAAjC;AACAa,gBAAAA,UAAU,CAAC,YAAM;AACfvB,kBAAAA,MAAM,UAAN,CAAcmB,KAAd;AACD,iBAFS,EAEPT,OAFO,CAAV;;AAb+B;AAAA;AAAA,uBAkB3BK,IAAI,EAlBuB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAV;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAzB;;eAqBeF,gB","sourcesContent":["const limits = new Map();\r\n\r\nconst defaultReplyFn = (ctx, msg) => ctx.reply(msg);\r\nconst defaultKeyFn = (ctx) => ctx.from.id;\r\n\r\nconst options = {\r\n  timeout: 5000,\r\n  replyfn: defaultReplyFn,\r\n  keyfn: defaultKeyFn\r\n}\r\n\r\nconst limitsMiddleware = (opts) => async (ctx, next) => {\r\n  const config = Object.assign(options, opts);\r\n\r\n  const { timeout, replyfn, keyfn } = config;\r\n\r\n  const value = keyfn(ctx);\r\n  const getBlocketUser = limits.get(value);\r\n\r\n  if (getBlocketUser) {\r\n    return replyfn(ctx, getBlocketUser);\r\n  }\r\n  else {\r\n    limits.set(value, `blocked for ${timeout} miliseconds`);\r\n    setTimeout(() => {\r\n      limits.delete(value);\r\n    }, timeout);\r\n  }\r\n\r\n  await next()\r\n};\r\n\r\nexport default limitsMiddleware;"],"file":"limits.js"}